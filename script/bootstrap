#!/usr/bin/env bash

# symlinks dotfiles
source "${0%/*}/../script/utils"

set -e

DOTFILES_ROOT="`pwd`"

echo ''

link_files () {
  ln -s $1 $2
  log_success "linked $1 to $2"
}

install_dotfiles () {
  log_info 'installing dotfiles'

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in `find $DOTFILES_ROOT -maxdepth 2 -name \*.symlink`
  do
    dest="$HOME/.`basename ${source} | sed 's/\.symlink//'`"

    if [ -f $dest ] || [ -d $dest ]
    then
      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        log_user "File already exists: ${COLOR_WHITE}~/`basename $dest`${COLOR_NONE}, what do you want to do? [${COLOR_GREEN_LIGHT}s${COLOR_NONE}]kip, [${COLOR_GREEN_LIGHT}S${COLOR_NONE}]kip all, [${COLOR_GREEN_LIGHT}o${COLOR_NONE}]verwrite, [${COLOR_GREEN_LIGHT}O${COLOR_NONE}]verwrite all, [${COLOR_GREEN_LIGHT}b${COLOR_NONE}]ackup, [${COLOR_GREEN_LIGHT}B${COLOR_NONE}]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        log_success "removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv $dest $dest\.backup
        log_success "moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_files $source $dest
      else
        log_success "skipped $source"
      fi

    else
      log_info "not found $dest"
      link_files $source $dest
    fi

  done
}

install_dotfiles
