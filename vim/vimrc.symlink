" use vim settings, not vi settings
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

if exists(":Bundle")

  Bundle 'gmarik/vundle'

  Bundle 'christoomey/vim-tmux-navigator'
  Bundle 'scrooloose/nerdtree'
  Bundle 'scrooloose/syntastic'
  Bundle 'scrooloose/nerdcommenter'
  Bundle 'tpope/vim-surround'
  Bundle 'tpope/vim-fugitive'
  Bundle 'tpope/vim-abolish'
  Bundle 'tpope/vim-endwise'
  Bundle 'tsaleh/vim-align'
  Bundle 'tsaleh/vim-matchit'
  Bundle 'mattn/gist-vim'
  Bundle 'mattn/webapi-vim'
  Bundle 'kien/ctrlp.vim'
  Bundle 'Valloric/YouCompleteMe'
  Bundle 'regedarek/ZoomWin'
  Bundle 'gregsexton/MatchTag'
  Bundle 'Townk/vim-autoclose'
  Bundle 'tristen/vim-sparkup'
  Bundle 'ag.vim'
  Bundle 'rgarver/Kwbd.vim'
  Bundle 'majutsushi/tagbar'
  Bundle 'danro/rename.vim'
  Bundle 'w0ng/vim-hybrid'
  Bundle 'airblade/vim-gitgutter'
  Bundle 'bling/vim-airline'
  Bundle 'sunaku/vim-ruby-minitest'
  Bundle 'majutsushi/tagbar'
  Bundle 'godlygeek/tabular'
  Bundle 'digitaltoad/vim-jade'
  Bundle 'vim-scripts/YankRing.vim'
  Bundle 'triglav/vim-visual-increment'
"  Bundle 'sjl/vitality.vim'
  Bundle 'jeetsukumaran/vim-buffergator'

  " needed for rizzatti/dash.vim
  Bundle 'rizzatti/funcoo.vim'
  Bundle 'rizzatti/dash.vim'

  " filetypes
  Bundle 'juvenn/mustache.vim'
  Bundle 'slim-template/vim-slim'
  Bundle 'cakebaker/scss-syntax.vim'
  Bundle 'pangloss/vim-javascript'
  Bundle 'kchmck/vim-coffee-script'
  Bundle 'othree/html5.vim'
  Bundle 'nono/vim-handlebars'
  Bundle 'indenthtml.vim'

  " colors
  Bundle 'chriskempson/vim-tomorrow-theme'
  Bundle 'w0ng/vim-hybrid'
  Bundle 'guns/xterm-color-table.vim'
  Bundle 'vim-scripts/jellybeans.vim'
endif

so $HOME/.vim/functions


" setup
" ----------------------------------------------------
filetype on
filetype plugin on
filetype indent on
syntax on
set laststatus=2

" colors
colorscheme jellybeans
hi Normal ctermbg=234
set cursorline
hi CursorLine ctermbg=233

hi TabLine      ctermfg=244 ctermbg=234 cterm=NONE
hi TabLineFill  ctermfg=123  ctermbg=234 cterm=NONE
hi TabLineSel   ctermfg=123  ctermbg=234 cterm=NONE

hi CursorLineNr term=bold ctermfg=250 ctermbg=234
hi NonText ctermfg=234
hi LineNr ctermbg=234
hi NonText ctermbg=234
hi SignColumn ctermbg=234
hi Directory ctermfg=27
hi VertSplit ctermbg=235
hi VertSplit ctermfg=235
set numberwidth=1

" Use UTF-8
set encoding=utf-8

" allow backspace in insert mode
set backspace=indent,eol,start

" store lots of :cmdline history
set history=1000

" show incomplete cmds down the bottom
set showcmd

" show current mode down the bottom
set showmode

" no sounds
set visualbell

" reload files changed outside vim
set autoread

" allow background files
set hidden

" turn off swap files
set noswapfile
set nobackup
set nowb

" highlight all search matches
set hlsearch
hi Search cterm=NONE ctermfg=0 ctermbg=154

let g:netrw_dirhistmax=0

" some stuff to ignore
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

" indentation & whitespace
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" split to the right, not left
set splitright

" split to the bottom, not top
set splitbelow

" show invisibles as per below
set list!
set list listchars=tab:>-,trail:.,precedes:<,extends:>

highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" show matching () {} etc
set showmatch

" fold based on indent
set foldmethod=indent

" prevent folding by default
set foldlevelstart=20

" hide the default mode text (e.g. -- INSERT -- below the statusline) "
set noshowmode

" autosave thanks to https://github.com/sjl/vitality.vim
autocmd FocusLost * silent! wall

" filetypes
autocmd BufNewFile,BufRead Gemfile set filetype=ruby
autocmd BufNewFile,BufRead Guardfile set filetype=ruby
autocmd BufNewFile,BufRead VagranFile set filetype=ruby
autocmd BufNewFile,BufRead Rakefile set filetype=ruby
autocmd BufNewFile,BufRead Podfile set filetype=ruby
autocmd BufNewFile,BufRead YML set filetype=ruby
autocmd BufRead,BufNewFile *.ru set filetype-ruby

autocmd BufRead,BufNewFile *jshintrc* set filetype=javascript
autocmd BufRead,BufNewFile Gruntfile set filetype=javascript
autocmd BufRead,BufNewFile *.js.liquid set filetype=javascript

autocmd BufRead,BufNewFile *.{slimbars} set filetype=slim
autocmd BufRead,BufNewFile *.{ejs} set filetype=html

autocmd BufNewFile,BufRead *.zsh-theme set filetype=zsh

autocmd BufRead,BufNewFile *gitconfig* set filetype=config
autocmd BufRead,BufNewFile *gitignore* set filetype=config

" auto-strip trailing whitespace on write
autocmd BufWritePre * :%s/\s\+$//e

autocmd VimResized * wincmd =

" scrolling
set scrolloff=8
set sidescrolloff=15
set sidescroll=1

" Prevent Vim from clobbering the scrollback buffer. See
" http://www.shallowsky.com/linux/noaltscreen.html
set t_ti= t_te=


" mappings

" ctrl -space to go back to previous buffer
map <C-@> :b#<CR>

" faster
nmap ; :

" edit file relative to current file
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%

" lead with ,
let mapleader = ","

" exit to normal mode with 'jj'
inoremap jj <ESC>

" replace current word
map <leader>rr :%s/<c-r>=expand("<cword>")<cr>/<c-r>=expand("<cword>")<cr>/g

" find current word
map <leader>f :Ag <c-r>=expand("<cword>")<cr><cr>

" Bind :Q to :q
command! Q q
command! Qall qall

" use a bar-shaped cursor for insert mode, even through tmux.
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" relative line numbers in normal mode, normal in insert
set rnu
autocmd InsertEnter * setl nu
autocmd InsertLeave * setl rnu

" for CSS
set iskeyword+=-

" plugin settings
" airline
let g:airline_theme='badwolf'
let g:airline_powerline_fonts=1
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_inactive_collapse=0
let g:airline#extensions#hunks#enabled = 0

let g:airline_section_a = ''
let g:airline_section_y = '%3l ↧ %3c ↦'
let g:airline_section_z = ''

let g:airline_theme_patch_func = 'AirlineThemePatch'
function! AirlineThemePatch(palette)
  if g:airline_theme == 'badwolf'
    for colors in values(a:palette.normal)
      let colors[1] = 235
      let colors[3] = 235
    endfor
    for colors in values(a:palette.insert)
      let colors[1] = 235
      let colors[3] = 235
    endfor
  endif
endfunction

" zoom zomm
map <leader><leader> :ZoomWin<CR>

" ag - faster ack
let g:ackprg = 'ag --nogroup --nocolor --column'

" ingore these when searching for files
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(jpg|png|gif|psd)$',
  \ }

" Nerdtree
map <leader>n :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

let NERDTreeShowLineNumbers = 1
let NERDTreeMinimalUI = 1

" yankring
let g:yankring_min_element_length = 2
let g:yankring_max_history = 1000
let g:yankring_window_use_bottom = 0
let g:yankring_history_file = '.yankring_history'
let g:yankring_replace_n_pkey = ''
nmap yr :YRShow<CR>

map <leader>b :BuffergatorToggle<CR>

